import asyncio
import os
import random
from datetime import datetime

from aiogram import Bot, Dispatcher, F, types
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import FSInputFile, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder

# =============== –ù–ê–°–¢–†–û–ô–ö–ò ===============
BOT_TOKEN = "8231589001:AAERhTujrOaUp8KraFkG1A6NB3COgqaw0cI"

# –ü–∞–ø–∫–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
PHOTOS_DIR = "photos"

# –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã
PAYMENT_DETAILS = {
    "‚Çø Bitcoin": "bc1qx0uumahy0ztyenqh0wtwyunkw96n5jwu7symt6",
    "üíµ USDT": "TA4PzsvPCVGW8obsSZ97Fot2YZFZp2b45F",
    "üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É": "2204320309969592 –û–ó–û–ù –ë–ê–ù–ö (–ê–Ω–≥–µ–ª–∏–Ω–∞ –ü.)",
}

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
WELCOME_TEXT = (
    "üè™ <b>HOOD 2 HOOD STORE</b> –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –í–∞—Å\n\n"
    "+10000 —Å–¥–µ–ª–æ–∫, –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω\n"
    "–°–∞–º–æ–µ –Ω–∏–∑–∫–æ–µ —á–∏—Å–ª–æ –Ω–µ –Ω–∞—Ö–æ–¥–æ–≤ —Å—Ä–µ–¥–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º.\n"
    "–ú—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥–∏–º –∑–∞ —Ä–∞–±–æ—Ç–æ–π –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, —á—Ç–æ–±—ã —É –≤–∞—Å –æ—Å—Ç–∞–≤–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —ç–º–æ—Ü–∏–∏.\n"
    "–ö–∞—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ.\n"
    "–ú—ã –ø—Ä–æ–≤–æ–¥–∏–º –æ–±—É—á–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–æ–≤, —á—Ç–æ–±—ã —É –≤–∞—Å –Ω–µ –≤–æ–∑–Ω–∏–∫–∞–ª–æ –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –∫–≤–µ—Å—Ç–∞.\n"
    "–ü—Ä–æ–≤–æ–¥–∏–º –º–Ω–æ–≥–æ –∞–∫—Ü–∏–π, –¥–µ–ª–∞–µ–º —Å–∫–∏–¥–∫–∏.\n"
    "–û–ø–µ—Ä–∞—Ç–æ—Ä –≤—Å–µ–≥–¥–∞ –∏–¥–µ—Ç –Ω–∞ –≤—Å—Ç—Ä–µ—á—É, –º—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—Ç–∏–º –∏ –ø–æ–º–æ–∂–µ–º –≤–∞–º, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã.\n"
    "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –æ–∫–æ–ª–æ —Ç—Ä—ë—Ö –ª–µ—Ç –∏ –º—ã –∑–Ω–∞–µ–º —Å–≤–æ—ë –¥–µ–ª–æ.\n\n"
    "üëÖ –ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –≤ H2H üëÖ"
)

# –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
PRODUCTS = {
    "–°–∞—Ä–∞—Ç–æ–≤": [
        {"name": "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 1–≥", "price": 3000, "desc": "–ò–º–µ–µ—Ç —è—Ä–∫–∏–π –∑–∞–ø–∞—Ö. –≠—Ñ—Ñ–µ–∫—Ç  –Ω–∞—Å—Ç—É–ø–∞–µ—Ç —É–∂–µ –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã. –õ–µ–≥–∫–∏–π HIGH —Å–º–µ–Ω—è–µ—Ç—Å—è  –≥–ª—É–±–æ–∫–∏–º STONE. –°–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å –ø–æ—Å–ª–µ –º–∞—Ä–∞—Ñ–æ–Ω–æ–≤,  —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∫—Ä–µ–ø–∫–æ–º—É —Å–Ω—É. –ù–∞–∫—É—Ä –ø–ª–∞–≤–Ω—ã–π –∏ –≥–ª—É–±–æ–∫–∏–π.  –ï–¥–∞, –ø—Ä–æ–≥—É–ª–∫–∏, –º—É–∑—ã–∫–∞, –º—ã—Å–ª–∏ –æ –≤–µ–ª–∏–∫–æ–º - –æ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç  –¥–ª—è —á–µ–≥–æ —É–≥–æ–¥–Ω–æ!, 1 –≥—Ä–∞–º–º", "photo": "saratov_1.jpg"},
        {"name": "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 2–≥", "price": 5800, "desc": "–ò–º–µ–µ—Ç —è—Ä–∫–∏–π –∑–∞–ø–∞—Ö. –≠—Ñ—Ñ–µ–∫—Ç  –Ω–∞—Å—Ç—É–ø–∞–µ—Ç —É–∂–µ –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã. –õ–µ–≥–∫–∏–π HIGH —Å–º–µ–Ω—è–µ—Ç—Å—è  –≥–ª—É–±–æ–∫–∏–º STONE. –°–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å –ø–æ—Å–ª–µ –º–∞—Ä–∞—Ñ–æ–Ω–æ–≤,  —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∫—Ä–µ–ø–∫–æ–º—É —Å–Ω—É. –ù–∞–∫—É—Ä –ø–ª–∞–≤–Ω—ã–π –∏ –≥–ª—É–±–æ–∫–∏–π.  –ï–¥–∞, –ø—Ä–æ–≥—É–ª–∫–∏, –º—É–∑—ã–∫–∞, –º—ã—Å–ª–∏ –æ –≤–µ–ª–∏–∫–æ–º - –æ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç  –¥–ª—è —á–µ–≥–æ —É–≥–æ–¥–Ω–æ!, 2 –≥—Ä–∞–º–º–∞", "photo": "saratov_1.jpg"},
        {"name": "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 4–≥", "price": 10000, "desc": "–ò–º–µ–µ—Ç —è—Ä–∫–∏–π –∑–∞–ø–∞—Ö. –≠—Ñ—Ñ–µ–∫—Ç  –Ω–∞—Å—Ç—É–ø–∞–µ—Ç —É–∂–µ –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã. –õ–µ–≥–∫–∏–π HIGH —Å–º–µ–Ω—è–µ—Ç—Å—è  –≥–ª—É–±–æ–∫–∏–º STONE. –°–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å –ø–æ—Å–ª–µ –º–∞—Ä–∞—Ñ–æ–Ω–æ–≤,  —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∫—Ä–µ–ø–∫–æ–º—É —Å–Ω—É. –ù–∞–∫—É—Ä –ø–ª–∞–≤–Ω—ã–π –∏ –≥–ª—É–±–æ–∫–∏–π.  –ï–¥–∞, –ø—Ä–æ–≥—É–ª–∫–∏, –º—É–∑—ã–∫–∞, –º—ã—Å–ª–∏ –æ –≤–µ–ª–∏–∫–æ–º - –æ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç  –¥–ª—è —á–µ–≥–æ —É–≥–æ–¥–Ω–æ!, 4 –≥—Ä–∞–º–º", "photo": "saratov_1.jpg"},
        {"name": "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 1–≥", "price": 2000, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –∏–∑–≤–µ—Å—Ç–µ–Ω –≤—Å–µ–º –∏–∑-–∑–∞ —Å–≤–æ–µ–≥–æ —É–±–æ–π–Ω–æ–≥–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –∑–∞—Ç—è–Ω—É—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ —Ç—Ä—ë—Ö —á–∞—Å–æ–≤.–°–∏–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ç–∏–∫–∞ —ç—Ç–æ–≥–æ –≤–∏–¥–∞ ‚Äî —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö —Å–æ—Ä—Ç–æ–≤ –∫–∞–∫ Haze –∏ Northern Lights. –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–æ—Ä—Ç–∞ Amnesia –±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂ –Ω–∞ Indica, –Ω–æ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –≤ –Ω–µ–º Sativa., 1 –≥—Ä–∞–º–º", "photo": "saratov_2.jpg"},
        {"name": "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 2–≥", "price": 3800, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –∏–∑–≤–µ—Å—Ç–µ–Ω –≤—Å–µ–º –∏–∑-–∑–∞ —Å–≤–æ–µ–≥–æ —É–±–æ–π–Ω–æ–≥–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –∑–∞—Ç—è–Ω—É—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ —Ç—Ä—ë—Ö —á–∞—Å–æ–≤.–°–∏–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ç–∏–∫–∞ —ç—Ç–æ–≥–æ –≤–∏–¥–∞ ‚Äî —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö —Å–æ—Ä—Ç–æ–≤ –∫–∞–∫ Haze –∏ Northern Lights. –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–æ—Ä—Ç–∞ Amnesia –±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂ –Ω–∞ Indica, –Ω–æ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –≤ –Ω–µ–º Sativa., 2 –≥—Ä–∞–º–º–∞", "photo": "saratov_2.jpg"},
        {"name": "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 5–≥", "price": 9000, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –∏–∑–≤–µ—Å—Ç–µ–Ω –≤—Å–µ–º –∏–∑-–∑–∞ —Å–≤–æ–µ–≥–æ —É–±–æ–π–Ω–æ–≥–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –∑–∞—Ç—è–Ω—É—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ —Ç—Ä—ë—Ö —á–∞—Å–æ–≤.–°–∏–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ç–∏–∫–∞ —ç—Ç–æ–≥–æ –≤–∏–¥–∞ ‚Äî —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö —Å–æ—Ä—Ç–æ–≤ –∫–∞–∫ Haze –∏ Northern Lights. –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–æ—Ä—Ç–∞ Amnesia –±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂ –Ω–∞ Indica, –Ω–æ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –≤ –Ω–µ–º Sativa., 5 –≥—Ä–∞–º–º", "photo": "saratov_2.jpg"},
        {"name": "ü´ê–®–∏—à–∫–∞ –ë–ª—é–±–µ—Ä–∏ü´ê 2–≥", "price": 3800, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –ø–æ—Ä–∞–∑–∏—Ç –≤–∞—Å –≤ —Å–∞–º–æ–µ —Å–µ—Ä–¥—Ü–µ. –ì–∏–±—Ä–∏–¥ —Å–∞—Ç–∏–≤—ã –∏ –∏–Ω–¥–∏–∫–∏ 20/80, –¢–ì–ö 19%. –ë–ª–∞–≥–æ–¥–∞—Ä—è –æ–±–∏–ª–∏—é —Å–º–æ–ª—ã, —à–∏—à–∫–∏ –∫–∞–º–µ–Ω–Ω—ã–µ. –ü–∞—Ö–Ω–µ—Ç –ª–µ—Å–Ω—ã–º–∏ —è–≥–æ–¥–∞–º–∏ –∏ —Å–≤–µ–∂–µ—Å–∫–æ—à–µ–Ω–Ω–æ–π —Ç—Ä–∞–≤–æ–π. –í–∫—É—Å —Å–ª–∞–¥–∫–∏–π, —è–≥–æ–¥–Ω—ã–π, –≥–æ—Ä–ª–æ –Ω–µ –¥–µ—Ä—ë—Ç., 2 –≥—Ä–∞–º–º–∞", "photo": "saratov_3.jpg"},
        {"name": "ü´ê–®–∏—à–∫–∞ –ë–ª—é–±–µ—Ä–∏ü´ê 5–≥", "price": 9000, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –ø–æ—Ä–∞–∑–∏—Ç –≤–∞—Å –≤ —Å–∞–º–æ–µ —Å–µ—Ä–¥—Ü–µ. –ì–∏–±—Ä–∏–¥ —Å–∞—Ç–∏–≤—ã –∏ –∏–Ω–¥–∏–∫–∏ 20/80, –¢–ì–ö 19%. –ë–ª–∞–≥–æ–¥–∞—Ä—è –æ–±–∏–ª–∏—é —Å–º–æ–ª—ã, —à–∏—à–∫–∏ –∫–∞–º–µ–Ω–Ω—ã–µ. –ü–∞—Ö–Ω–µ—Ç –ª–µ—Å–Ω—ã–º–∏ —è–≥–æ–¥–∞–º–∏ –∏ —Å–≤–µ–∂–µ—Å–∫–æ—à–µ–Ω–Ω–æ–π —Ç—Ä–∞–≤–æ–π. –í–∫—É—Å —Å–ª–∞–¥–∫–∏–π, —è–≥–æ–¥–Ω—ã–π, –≥–æ—Ä–ª–æ –Ω–µ –¥–µ—Ä—ë—Ç., 5 –≥—Ä–∞–º–º", "photo": "saratov_3.jpg"},
        {"name": "‚ú® –ú–ï–§ crystal VHQ 99%‚ú® 1–≥", "price": 3500, "desc": "–ú–ï–§–ï–î–†–û–ù –≠—Ñ—Ñ–µ–∫—Ç—ã: ‚Ä¢ –ó–∞—Ä—è–¥ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –ø—Ä–∏–ª–∏–≤ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏–ª ‚Ä¢ –≠–π—Ñ–æ—Ä–∏—è, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—ä—ë–º ‚Ä¢ –ñ–µ–ª–∞–Ω–∏–µ –º–Ω–æ–≥–æ –¥–≤–∏–≥–∞—Ç—å—Å—è, –æ–±—â–∞—Ç—å—Å—è –∏ –¥–µ–ª–∏—Ç—å—Å—è —Å–∞–º—ã–º —Å–æ–∫—Ä–æ–≤–µ–Ω–Ω—ã–º ‚Ä¢ –ü–æ—è–≤–ª—è–µ—Ç—Å—è —á—É–≤—Å—Ç–≤–æ –±–µ–∑–º—è—Ç–µ–∂–Ω–æ—Å—Ç–∏ –∏ –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —É—Ö–æ–¥—è—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–π –ø–ª–∞–Ω ‚Ä¢ –°–µ–∫—Å—É–∞–ª—å–Ω–∞—è –≤–æ–∑–±—É–∂–¥–µ–Ω–Ω–æ—Å—Ç—å ‚Ä¢ –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º –ª—é–¥—è–º –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ‚Ä¢ –¶–≤–µ—Ç ‚Äì –±–µ–ª–æ—Å–Ω–µ–∂–Ω—ã–π ‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äì –∫—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è ‚Ä¢ –ö—Ä–∏—Å—Ç–∞–ª–ª—ã –ø–æ–ø–∞–¥–∞—é—Ç—Å—è –∫–∞–∫ –∫—Ä—É–ø–Ω—ã–µ, —Ç–∞–∫ –∏ –±–æ–ª–µ–µ –º–µ–ª–∫–∏–µ ‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç —É–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —Å—Ä–µ–¥–Ω–µ–º 2 —á–∞—Å–∞, 1 –≥—Ä–∞–º–º", "photo": "saratov_4.jpg"},
        {"name": "‚ú® –ú–ï–§ crystal VHQ 99%‚ú® 2–≥", "price": 6900, "desc": "–ú–ï–§–ï–î–†–û–ù –≠—Ñ—Ñ–µ–∫—Ç—ã: ‚Ä¢ –ó–∞—Ä—è–¥ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –ø—Ä–∏–ª–∏–≤ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏–ª ‚Ä¢ –≠–π—Ñ–æ—Ä–∏—è, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—ä—ë–º ‚Ä¢ –ñ–µ–ª–∞–Ω–∏–µ –º–Ω–æ–≥–æ –¥–≤–∏–≥–∞—Ç—å—Å—è, –æ–±—â–∞—Ç—å—Å—è –∏ –¥–µ–ª–∏—Ç—å—Å—è —Å–∞–º—ã–º —Å–æ–∫—Ä–æ–≤–µ–Ω–Ω—ã–º ‚Ä¢ –ü–æ—è–≤–ª—è–µ—Ç—Å—è —á—É–≤—Å—Ç–≤–æ –±–µ–∑–º—è—Ç–µ–∂–Ω–æ—Å—Ç–∏ –∏ –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —É—Ö–æ–¥—è—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–π –ø–ª–∞–Ω ‚Ä¢ –°–µ–∫—Å—É–∞–ª—å–Ω–∞—è –≤–æ–∑–±—É–∂–¥–µ–Ω–Ω–æ—Å—Ç—å ‚Ä¢ –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º –ª—é–¥—è–º –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ‚Ä¢ –¶–≤–µ—Ç ‚Äì –±–µ–ª–æ—Å–Ω–µ–∂–Ω—ã–π ‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äì –∫—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è ‚Ä¢ –ö—Ä–∏—Å—Ç–∞–ª–ª—ã –ø–æ–ø–∞–¥–∞—é—Ç—Å—è –∫–∞–∫ –∫—Ä—É–ø–Ω—ã–µ, —Ç–∞–∫ –∏ –±–æ–ª–µ–µ –º–µ–ª–∫–∏–µ ‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç —É–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —Å—Ä–µ–¥–Ω–µ–º 2 —á–∞—Å–∞, 1 –≥—Ä–∞–º–º", "photo": "saratov_4.jpg"},
        {"name": "‚ú® –ú–ï–§ crystal VHQ 99%‚ú® 4–≥", "price": 13000, "desc": "–ú–ï–§–ï–î–†–û–ù –≠—Ñ—Ñ–µ–∫—Ç—ã: ‚Ä¢ –ó–∞—Ä—è–¥ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –ø—Ä–∏–ª–∏–≤ –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏–ª ‚Ä¢ –≠–π—Ñ–æ—Ä–∏—è, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—ä—ë–º ‚Ä¢ –ñ–µ–ª–∞–Ω–∏–µ –º–Ω–æ–≥–æ –¥–≤–∏–≥–∞—Ç—å—Å—è, –æ–±—â–∞—Ç—å—Å—è –∏ –¥–µ–ª–∏—Ç—å—Å—è —Å–∞–º—ã–º —Å–æ–∫—Ä–æ–≤–µ–Ω–Ω—ã–º ‚Ä¢ –ü–æ—è–≤–ª—è–µ—Ç—Å—è —á—É–≤—Å—Ç–≤–æ –±–µ–∑–º—è—Ç–µ–∂–Ω–æ—Å—Ç–∏ –∏ –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —É—Ö–æ–¥—è—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–π –ø–ª–∞–Ω ‚Ä¢ –°–µ–∫—Å—É–∞–ª—å–Ω–∞—è –≤–æ–∑–±—É–∂–¥–µ–Ω–Ω–æ—Å—Ç—å ‚Ä¢ –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º –ª—é–¥—è–º –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ ‚Ä¢ –¶–≤–µ—Ç ‚Äì –±–µ–ª–æ—Å–Ω–µ–∂–Ω—ã–π ‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äì –∫—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–∞—è ‚Ä¢ –ö—Ä–∏—Å—Ç–∞–ª–ª—ã –ø–æ–ø–∞–¥–∞—é—Ç—Å—è –∫–∞–∫ –∫—Ä—É–ø–Ω—ã–µ, —Ç–∞–∫ –∏ –±–æ–ª–µ–µ –º–µ–ª–∫–∏–µ ‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç —É–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —Å—Ä–µ–¥–Ω–µ–º 2 —á–∞—Å–∞, 1 –≥—Ä–∞–º–º", "photo": "saratov_4.jpg"},
        {"name": "üíç A-PVP –ë–µ–ª—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª üíç 0.5–≥", "price": 2750, "desc": "–î–ª—è —ç—Å–∫–∏–∑–∞ –Ω–∞—à–µ–π –∞–ª—å—Ñ—ã –º—ã –≤–∑—è–ª–∏ –∑–∞ –æ—Å–Ω–æ–≤—É –ø–∞–ª–∏—Ç—Ä—É –≥–ª—É–±–∏–Ω—ã –∏ –≤—ã—Å–æ–∫–∏–π –≥—Ä–∞–¥—É—Å —ç–º–æ—Ü–∏–π - –æ—Ç —ç—Å—Ç–µ—Ç–∏–∫–∏ –¥–æ –º—É—Ä–∞—à–µ–∫. –†–∞–±–æ—Ç–∞—è —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞, –Ω–∞–º —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã —Ä–µ–∫–æ—Ä–¥–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤, –Ω–∞–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–º –∫–∞–π—Ñ–æ–º —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –º–∞–≥–∏–∏.", "photo": "saratov_5.jpg"},
        {"name": "üíç A-PVP –ë–µ–ª—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª üíç 1–≥", "price": 4000, "desc": "–î–ª—è —ç—Å–∫–∏–∑–∞ –Ω–∞—à–µ–π –∞–ª—å—Ñ—ã –º—ã –≤–∑—è–ª–∏ –∑–∞ –æ—Å–Ω–æ–≤—É –ø–∞–ª–∏—Ç—Ä—É –≥–ª—É–±–∏–Ω—ã –∏ –≤—ã—Å–æ–∫–∏–π –≥—Ä–∞–¥—É—Å —ç–º–æ—Ü–∏–π - –æ—Ç —ç—Å—Ç–µ—Ç–∏–∫–∏ –¥–æ –º—É—Ä–∞—à–µ–∫. –†–∞–±–æ—Ç–∞—è —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞, –Ω–∞–º —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã —Ä–µ–∫–æ—Ä–¥–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤, –Ω–∞–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–º –∫–∞–π—Ñ–æ–º —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –º–∞–≥–∏–∏.", "photo": "saratov_5.jpg"},
        {"name": "üíç A-PVP –ë–µ–ª—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª üíç 2–≥", "price": 7000, "desc": "–î–ª—è —ç—Å–∫–∏–∑–∞ –Ω–∞—à–µ–π –∞–ª—å—Ñ—ã –º—ã –≤–∑—è–ª–∏ –∑–∞ –æ—Å–Ω–æ–≤—É –ø–∞–ª–∏—Ç—Ä—É –≥–ª—É–±–∏–Ω—ã –∏ –≤—ã—Å–æ–∫–∏–π –≥—Ä–∞–¥—É—Å —ç–º–æ—Ü–∏–π - –æ—Ç —ç—Å—Ç–µ—Ç–∏–∫–∏ –¥–æ –º—É—Ä–∞—à–µ–∫. –†–∞–±–æ—Ç–∞—è —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞, –Ω–∞–º —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–∏—Å—Ç–∞–ª–ª—ã —Ä–µ–∫–æ—Ä–¥–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤, –Ω–∞–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–º –∫–∞–π—Ñ–æ–º —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –º–∞–≥–∏–∏.", "photo": "saratov_5.jpg"},
        {"name": "üíç –ì–µ—Ä–æ–∏–Ω –°–≤–µ–∂–∏–π –ø—Ä–∏–≤–æ–∑ üíç 0.3–≥", "price": 2750, "desc": "—á–∏—Å—Ç—ã–π –≥–µ—Ä–æ–∏–Ω., 0.3–≥", "photo": "saratov_6.jpg"},
        {"name": "üíç –ì–µ—Ä–æ–∏–Ω –°–≤–µ–∂–∏–π –ø—Ä–∏–≤–æ–∑ üíç 0.5–≥", "price": 4000, "desc": "—á–∏—Å—Ç—ã–π –≥–µ—Ä–æ–∏–Ω., 0.5–≥", "photo": "saratov_6.jpg"},
    ],
    "–ê—Ä–º–∞–≤–∏—Ä": [
        {"name": "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 1–≥", "price": 3000, "desc": "–ò–º–µ–µ—Ç —è—Ä–∫–∏–π –∑–∞–ø–∞—Ö. –≠—Ñ—Ñ–µ–∫—Ç  –Ω–∞—Å—Ç—É–ø–∞–µ—Ç —É–∂–µ –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã. –õ–µ–≥–∫–∏–π HIGH —Å–º–µ–Ω—è–µ—Ç—Å—è  –≥–ª—É–±–æ–∫–∏–º STONE. –°–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å –ø–æ—Å–ª–µ –º–∞—Ä–∞—Ñ–æ–Ω–æ–≤,  —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∫—Ä–µ–ø–∫–æ–º—É —Å–Ω—É. –ù–∞–∫—É—Ä –ø–ª–∞–≤–Ω—ã–π –∏ –≥–ª—É–±–æ–∫–∏–π.  –ï–¥–∞, –ø—Ä–æ–≥—É–ª–∫–∏, –º—É–∑—ã–∫–∞, –º—ã—Å–ª–∏ –æ –≤–µ–ª–∏–∫–æ–º - –æ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç  –¥–ª—è —á–µ–≥–æ —É–≥–æ–¥–Ω–æ!, 1 –≥—Ä–∞–º–º", "photo": "saratov_1.jpg"},
        {"name": "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 2–≥", "price": 5800, "desc": "–ò–º–µ–µ—Ç —è—Ä–∫–∏–π –∑–∞–ø–∞—Ö. –≠—Ñ—Ñ–µ–∫—Ç  –Ω–∞—Å—Ç—É–ø–∞–µ—Ç —É–∂–µ –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã. –õ–µ–≥–∫–∏–π HIGH —Å–º–µ–Ω—è–µ—Ç—Å—è  –≥–ª—É–±–æ–∫–∏–º STONE. –°–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å –ø–æ—Å–ª–µ –º–∞—Ä–∞—Ñ–æ–Ω–æ–≤,  —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∫—Ä–µ–ø–∫–æ–º—É —Å–Ω—É. –ù–∞–∫—É—Ä –ø–ª–∞–≤–Ω—ã–π –∏ –≥–ª—É–±–æ–∫–∏–π.  –ï–¥–∞, –ø—Ä–æ–≥—É–ª–∫–∏, –º—É–∑—ã–∫–∞, –º—ã—Å–ª–∏ –æ –≤–µ–ª–∏–∫–æ–º - –æ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç  –¥–ª—è —á–µ–≥–æ —É–≥–æ–¥–Ω–æ!, 2 –≥—Ä–∞–º–º–∞", "photo": "saratov_1.jpg"},
        {"name": "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 5–≥", "price": 12000, "desc": "–ò–º–µ–µ—Ç —è—Ä–∫–∏–π –∑–∞–ø–∞—Ö. –≠—Ñ—Ñ–µ–∫—Ç  –Ω–∞—Å—Ç—É–ø–∞–µ—Ç —É–∂–µ –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã. –õ–µ–≥–∫–∏–π HIGH —Å–º–µ–Ω—è–µ—Ç—Å—è  –≥–ª—É–±–æ–∫–∏–º STONE. –°–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å –ø–æ—Å–ª–µ –º–∞—Ä–∞—Ñ–æ–Ω–æ–≤,  —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∫—Ä–µ–ø–∫–æ–º—É —Å–Ω—É. –ù–∞–∫—É—Ä –ø–ª–∞–≤–Ω—ã–π –∏ –≥–ª—É–±–æ–∫–∏–π.  –ï–¥–∞, –ø—Ä–æ–≥—É–ª–∫–∏, –º—É–∑—ã–∫–∞, –º—ã—Å–ª–∏ –æ –≤–µ–ª–∏–∫–æ–º - –æ–Ω –ø–æ–¥—Ö–æ–¥–∏—Ç  –¥–ª—è —á–µ–≥–æ —É–≥–æ–¥–Ω–æ!, 4 –≥—Ä–∞–º–º", "photo": "saratov_1.jpg"},
        {"name": "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 1–≥", "price": 2000, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –∏–∑–≤–µ—Å—Ç–µ–Ω –≤—Å–µ–º –∏–∑-–∑–∞ —Å–≤–æ–µ–≥–æ —É–±–æ–π–Ω–æ–≥–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –∑–∞—Ç—è–Ω—É—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ —Ç—Ä—ë—Ö —á–∞—Å–æ–≤.–°–∏–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ç–∏–∫–∞ —ç—Ç–æ–≥–æ –≤–∏–¥–∞ ‚Äî —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö —Å–æ—Ä—Ç–æ–≤ –∫–∞–∫ Haze –∏ Northern Lights. –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–æ—Ä—Ç–∞ Amnesia –±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂ –Ω–∞ Indica, –Ω–æ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –≤ –Ω–µ–º Sativa., 1 –≥—Ä–∞–º–º", "photo": "saratov_2.jpg"},
        {"name": "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 2–≥", "price": 3800, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –∏–∑–≤–µ—Å—Ç–µ–Ω –≤—Å–µ–º –∏–∑-–∑–∞ —Å–≤–æ–µ–≥–æ —É–±–æ–π–Ω–æ–≥–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –∑–∞—Ç—è–Ω—É—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ —Ç—Ä—ë—Ö —á–∞—Å–æ–≤.–°–∏–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ç–∏–∫–∞ —ç—Ç–æ–≥–æ –≤–∏–¥–∞ ‚Äî —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö —Å–æ—Ä—Ç–æ–≤ –∫–∞–∫ Haze –∏ Northern Lights. –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–æ—Ä—Ç–∞ Amnesia –±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂ –Ω–∞ Indica, –Ω–æ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –≤ –Ω–µ–º Sativa., 2 –≥—Ä–∞–º–º–∞", "photo": "saratov_2.jpg"},
        {"name": "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 0.5–≥", "price": 1100, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –∏–∑–≤–µ—Å—Ç–µ–Ω –≤—Å–µ–º –∏–∑-–∑–∞ —Å–≤–æ–µ–≥–æ —É–±–æ–π–Ω–æ–≥–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç –∑–∞—Ç—è–Ω—É—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ —Ç—Ä—ë—Ö —á–∞—Å–æ–≤.–°–∏–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ç–∏–∫–∞ —ç—Ç–æ–≥–æ –≤–∏–¥–∞ ‚Äî —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–∞–∫–∏—Ö —Å–æ—Ä—Ç–æ–≤ –∫–∞–∫ Haze –∏ Northern Lights. –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–æ—Ä—Ç–∞ Amnesia –±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂ –Ω–∞ Indica, –Ω–æ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –≤ –Ω–µ–º Sativa., 5 –≥—Ä–∞–º–º", "photo": "saratov_2.jpg"},
        {"name": "ü´ê–®–∏—à–∫–∞ –ë–ª—é–±–µ—Ä–∏ü´ê 2–≥", "price": 3800, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –ø–æ—Ä–∞–∑–∏—Ç –≤–∞—Å –≤ —Å–∞–º–æ–µ —Å–µ—Ä–¥—Ü–µ. –ì–∏–±—Ä–∏–¥ —Å–∞—Ç–∏–≤—ã –∏ –∏–Ω–¥–∏–∫–∏ 20/80, –¢–ì–ö 19%. –ë–ª–∞–≥–æ–¥–∞—Ä—è –æ–±–∏–ª–∏—é —Å–º–æ–ª—ã, —à–∏—à–∫–∏ –∫–∞–º–µ–Ω–Ω—ã–µ. –ü–∞—Ö–Ω–µ—Ç –ª–µ—Å–Ω—ã–º–∏ —è–≥–æ–¥–∞–º–∏ –∏ —Å–≤–µ–∂–µ—Å–∫–æ—à–µ–Ω–Ω–æ–π —Ç—Ä–∞–≤–æ–π. –í–∫—É—Å —Å–ª–∞–¥–∫–∏–π, —è–≥–æ–¥–Ω—ã–π, –≥–æ—Ä–ª–æ –Ω–µ –¥–µ—Ä—ë—Ç., 2 –≥—Ä–∞–º–º–∞", "photo": "saratov_3.jpg"},
        {"name": "ü´ê–®–∏—à–∫–∞ –ë–ª—é–±–µ—Ä–∏ü´ê 1–≥", "price": 2000, "desc": "–≠—Ç–æ—Ç —Å–æ—Ä—Ç –ø–æ—Ä–∞–∑–∏—Ç –≤–∞—Å –≤ —Å–∞–º–æ–µ —Å–µ—Ä–¥—Ü–µ. –ì–∏–±—Ä–∏–¥ —Å–∞—Ç–∏–≤—ã –∏ –∏–Ω–¥–∏–∫–∏ 20/80, –¢–ì–ö 19%. –ë–ª–∞–≥–æ–¥–∞—Ä—è –æ–±–∏–ª–∏—é —Å–º–æ–ª—ã, —à–∏—à–∫–∏ –∫–∞–º–µ–Ω–Ω—ã–µ. –ü–∞—Ö–Ω–µ—Ç –ª–µ—Å–Ω—ã–º–∏ —è–≥–æ–¥–∞–º–∏ –∏ —Å–≤–µ–∂–µ—Å–∫–æ—à–µ–Ω–Ω–æ–π —Ç—Ä–∞–≤–æ–π. –í–∫—É—Å —Å–ª–∞–¥–∫–∏–π, —è–≥–æ–¥–Ω—ã–π, –≥–æ—Ä–ª–æ –Ω–µ –¥–µ—Ä—ë—Ç., 5 –≥—Ä–∞–º–º", "photo": "saratov_3.jpg"},
    ],
}

# –†–∞–π–æ–Ω—ã —Ç–µ–ø–µ—Ä—å –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ç–æ–≤–∞—Ä–∞ (2‚Äì5 –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π –Ω–∞ —Ç–æ–≤–∞—Ä)
DISTRICTS = {
    "–°–∞—Ä–∞—Ç–æ–≤": {
        "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 1–≥": ["–¶–µ–Ω—Ç—Ä", "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π"],
        "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 2–≥": ["–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π"],
        "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 4–≥": ["–¶–µ–Ω—Ç—Ä", "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π"],
        "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 1–≥": ["–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–¶–µ–Ω—Ç—Ä"],
        "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 2–≥": ["–õ–µ–Ω–∏–Ω—Å–∫–∏–π", "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–¶–µ–Ω—Ç—Ä"],
        "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 5–≥": ["–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π"],
        "ü´ê–®–∏—à–∫–∞ –ë–ª—é–±–µ—Ä–∏ü´ê 2–≥": ["–¶–µ–Ω—Ç—Ä", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π", "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π"],
        "ü´ê–®–∏—à–∫–∞ –ë–ª—é–±–µ—Ä–∏ü´ê 5–≥": ["–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π"],
        "‚ú® –ú–ï–§ crystal VHQ 99%‚ú® 1–≥": ["–¶–µ–Ω—Ç—Ä", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π"],
        "‚ú® –ú–ï–§ crystal VHQ 99%‚ú® 2–≥": ["–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–¶–µ–Ω—Ç—Ä"],
        "‚ú® –ú–ï–§ crystal VHQ 99%‚ú® 4–≥": ["–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π", "–¶–µ–Ω—Ç—Ä"],
        "üíç A-PVP –ë–µ–ª—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª üíç 0.5–≥": ["–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π", "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–¶–µ–Ω—Ç—Ä", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π"],
        "üíç A-PVP –ë–µ–ª—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª üíç 1–≥": ["–õ–µ–Ω–∏–Ω—Å–∫–∏–π", "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π"],
        "üíç A-PVP –ë–µ–ª—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª üíç 4–≥": ["–¶–µ–Ω—Ç—Ä", "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π", "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π"],
        "üíç –ì–µ—Ä–æ–∏–Ω –°–≤–µ–∂–∏–π –ø—Ä–∏–≤–æ–∑ üíç 0.3–≥": ["–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–¶–µ–Ω—Ç—Ä"],
        "üíç –ì–µ—Ä–æ–∏–Ω –°–≤–µ–∂–∏–π –ø—Ä–∏–≤–æ–∑ üíç 0.5–≥": ["–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–¶–µ–Ω—Ç—Ä"],
    },
    "–ê—Ä–º–∞–≤–∏—Ä": {
        "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 1–≥": ["–¶–µ–Ω—Ç—Ä", "–°–µ–≤–µ—Ä–Ω—ã–π"],
        "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 2–≥": ["–Æ–∂–Ω—ã–π", "–¶–µ–Ω—Ç—Ä", "–°–µ–≤–µ—Ä–Ω—ã–π"],
        "üç´–ì–∞—à–∏—à –ò–∑–æ–ª—è—Ç–æ—Äüç´ 5–≥": ["–°–µ–≤–µ—Ä–Ω—ã–π", "–Æ–∂–Ω—ã–π"],
        "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 1–≥": ["–¶–µ–Ω—Ç—Ä", "–Æ–∂–Ω—ã–π", "–°–µ–≤–µ—Ä–Ω—ã–π"],
        "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 2–≥": ["–Æ–∂–Ω—ã–π", "–¶–µ–Ω—Ç—Ä"],
        "üåø–®–∏—à–∫–∏ –ë—Ä—é—Å –±–µ–Ω–Ω–µ—Äüåø 0.5–≥": ["–°–µ–≤–µ—Ä–Ω—ã–π", "–¶–µ–Ω—Ç—Ä", "–Æ–∂–Ω—ã–π",],  # –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å "–°–µ–≤–µ—Ä–Ω—ã–π-2", –µ—Å–ª–∏ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Ä–∞–π–æ–Ω–∞
        "ü´ê–®–∏—à–∫–∞ –ë–ª—é–±–µ—Ä–∏ü´ê 2–≥": ["–¶–µ–Ω—Ç—Ä", "–°–µ–≤–µ—Ä–Ω—ã–π"],
        "ü´ê–®–∏—à–∫–∞ –ë–ª—é–±–µ—Ä–∏ü´ê 1–≥": ["–°–µ–≤–µ—Ä–Ω—ã–π", "–¶–µ–Ω—Ç—Ä", "–Æ–∂–Ω—ã–π",],         
    },
}

# –ï—Å–ª–∏ –≥–¥–µ-—Ç–æ –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å —Å —Ä–∞–π–æ–Ω–æ–º, –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å ¬´–°–µ–≤–µ—Ä–Ω—ã–π-2¬ª –∏ —Ç.–ø.
for city, mapping in DISTRICTS.items():
    for prod_name in list(mapping.keys()):
        # –ß–∏—Å—Ç–∏–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Å—Ç—Ä–∞–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è (–ø—Ä–∏–º–µ—Ä)
        cleaned = [d for d in mapping[prod_name] if d in {"–¶–µ–Ω—Ç—Ä", "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π", "–°–µ–≤–µ—Ä–Ω—ã–π", "–Æ–∂–Ω—ã–π"}]
        if cleaned:
            mapping[prod_name] = list(dict.fromkeys(cleaned))[:5]  # –º–∞–∫—Å–∏–º—É–º 5 —Ä–∞–π–æ–Ω–æ–≤
        else:
            # –§–æ–ª–±—ç–∫ –Ω–∞ —Å–ª—É—á–∞–π –æ–ø–µ—á–∞—Ç–æ–∫ ‚Äî –¥–∞–¥–∏–º –ø–æ –≥–æ—Ä–æ–¥—É –¥–µ—Ñ–æ–ª—Ç
            default_by_city = {
                "–°–∞—Ä–∞—Ç–æ–≤": ["–¶–µ–Ω—Ç—Ä", "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π"],
                "–ê—Ä–º–∞–≤–∏—Ä": ["–¶–µ–Ω—Ç—Ä", "–°–µ–≤–µ—Ä–Ω—ã–π", "–Æ–∂–Ω—ã–π"],
            }
            mapping[prod_name] = default_by_city.get(city, [])[:3]

# –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
PAYMENTS = ["‚Çø Bitcoin", "üíµ USDT", "üí≥ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É"]

ORDERS_FILE = "orders.txt"
# ========================================

# –ü–∞–º—è—Ç—å –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
# –°–æ—Ö—Ä–∞–Ω—è–µ–º:
#   city, product, district, payment
user_state: dict[int, dict] = {}

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ö–õ–ê–í–ò–ê–¢–£–†–´ =====
def kb_main_menu() -> types.InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üõí –ö—É–ø–∏—Ç—å", callback_data="menu:buy")
    kb.button(text="üíº –†–∞–±–æ—Ç–∞", callback_data="menu:job")
    kb.button(text="üõç –ü–æ–∫—É–ø–∫–∏", callback_data="menu:purchases")
    kb.button(text="üìú –ü—Ä–∞–≤–∏–ª–∞", callback_data="menu:rules")
    kb.button(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="menu:info")
    kb.button(text="üë®‚Äçüíª –û–ø–µ—Ä–∞—Ç–æ—Ä", url="https://t.me/skyw_scm")
    kb.adjust(2, 2, 2)  # –ø–æ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
    return kb.as_markup()

def kb_cities() -> types.InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for city in PRODUCTS.keys():
        kb.button(text=city, callback_data=f"city:{city}")
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back:main")
    kb.adjust(2, 1)
    return kb.as_markup()

def kb_products(city: str) -> types.InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for idx, item in enumerate(PRODUCTS[city]):
        kb.button(text=f"{item['name']} ‚Äî {item['price']}‚ÇΩ", callback_data=f"prod:{idx}")
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back:cities")
    kb.adjust(1)
    return kb.as_markup()

def kb_districts(city: str, product_name: str) -> types.InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    options = DISTRICTS.get(city, {}).get(product_name, [])
    if not options:
        # –§–æ–ª–±—ç–∫ –Ω–∞ —Å–ª—É—á–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        options = {
            "–°–∞—Ä–∞—Ç–æ–≤": ["–¶–µ–Ω—Ç—Ä", "–ö–∏—Ä–æ–≤—Å–∫–∏–π", "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π", "–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π", "–õ–µ–Ω–∏–Ω—Å–∫–∏–π"],
            "–ê—Ä–º–∞–≤–∏—Ä": ["–¶–µ–Ω—Ç—Ä", "–°–µ–≤–µ—Ä–Ω—ã–π", "–Æ–∂–Ω—ã–π"],
        }.get(city, [])
    for d in options:
        kb.button(text=d, callback_data=f"dist:{d}")
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back:products")
    kb.adjust(2, 1)
    return kb.as_markup()

def kb_payments() -> types.InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    for p in PAYMENTS:
        kb.button(text=p, callback_data=f"pay:{p}")
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back:districts")
    kb.adjust(1)
    return kb.as_markup()

def kb_order_final() -> types.InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back:main")
    kb.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="order:cancel")
    kb.button(text="üë®‚Äçüíª –û–ø–µ—Ä–∞—Ç–æ—Ä", url="https://t.me/h2h_operator")
    kb.adjust(2, 1)
    return kb.as_markup()

# =============== –ö–ê–ü–ß–ê ===============
def generate_captcha():
    # –æ–¥–∏–Ω —Ü–µ–ª–µ–≤–æ–π —Å–º–∞–π–ª –∏ 5 –ª–æ–∂–Ω—ã—Ö
    correct = random.choice(["üòÄ", "üòé", "üòç", "ü§ì", "üòá", "ü§†"])
    pool = ["üòÇ", "üò≠", "üò°", "üò±", "ü§Ø", "ü•∂", "ü•≥", "üò¥", "ü§™", "üòè"]
    wrong = random.sample(pool, 5)
    options = wrong + [correct]
    random.shuffle(options)

    kb = InlineKeyboardBuilder()
    for e in options:
        kb.button(text=e, callback_data=f"captcha:{e}:{correct}")
    kb.adjust(3, 3)
    return correct, kb.as_markup()

@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    correct, kb = generate_captcha()
    await message.answer(
        f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–∫–æ–π –∂–µ —Å–º–∞–π–ª–∏–∫:\n\n<b style='font-size:20px'>{correct}</b>",
        reply_markup=kb
    )

@dp.callback_query(F.data.startswith("captcha:"))
async def on_captcha(cb: types.CallbackQuery):
    _, chosen, correct = cb.data.split(":")
    if chosen == correct:
        await cb.message.edit_text(WELCOME_TEXT, reply_markup=kb_main_menu())
    else:
        new_correct, new_kb = generate_captcha()
        await cb.message.edit_text(
            f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–∫–æ–π –∂–µ —Å–º–∞–π–ª–∏–∫:\n\n<b>{new_correct}</b>",
            reply_markup=new_kb
        )
    await cb.answer()

# ============ –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ============
@dp.callback_query(F.data == "menu:buy")
async def on_buy(cb: types.CallbackQuery):
    await safe_edit(cb.message, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", kb_cities())
    await cb.answer()

@dp.callback_query(F.data.in_({"menu:job", "menu:purchases", "menu:rules", "menu:info"}))
async def on_other_sections(cb: types.CallbackQuery):
    texts = {
        "menu:job": "üíº –†–∞–∑–¥–µ–ª ¬´–†–∞–±–æ—Ç–∞¬ª.\n–ò—â–µ–º –∫—É—Ä—å–µ—Ä–æ–≤ –∏ –≤–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ –≤—Å–µ–º –≥–æ—Ä–æ–¥–∞–º:\n1) –í–æ–∑—Ä–∞—Å—Ç 14+.\n2) –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Å –∑–∞–ª–æ–≥–æ–º, –Ω–∏–∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è.\n4) –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã—Ö –∏ –≤–µ–∂–ª–∏–≤—ã—Ö –ª—é–¥–µ–π. \n –ü–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É  ",
        "menu:purchases": "üõç –†–∞–∑–¥–µ–ª ¬´–ü–æ–∫—É–ø–∫–∏¬ª.\n–í–∞—à–∏ –ø—Ä–æ—à–ª—ã–µ –∑–∞–∫–∞–∑—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å.",
        "menu:rules": "üìú –†–∞–∑–¥–µ–ª ¬´–ü—Ä–∞–≤–∏–ª–∞¬ª.\n1) –û–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 10 –¥–æ 04 –º—Å–∫ –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö.\n2)–ú–∞–≥–∞–∑–∏–Ω –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –ø–æ –æ—à–∏–±–∫–µ –∫—É–ø–∏–ª –∫–ª–∞–¥ –Ω–µ –≤ —Ç–æ–º —Ä–µ–≥–∏–æ–Ω–µ.\n3) –ü–µ—Ä–µ–¥–∞—á–∞ –∞–¥—Ä–µ—Å–∞ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n4) –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã ‚Äî –ø–∏—à–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.",
        "menu:info": "‚ÑπÔ∏è –†–∞–∑–¥–µ–ª ¬´–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è¬ª.\n üì©–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –≤ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞, –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–æ–≤–∞—Ä—É/ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑/ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–¥–∑–∞–∫–∞–∑/ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É. –ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –≤ HOOD2HOOD store",
    }
    kb = InlineKeyboardBuilder()
    kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back:main")
    await safe_edit(cb.message, texts[cb.data], kb.as_markup())
    await cb.answer()

@dp.callback_query(F.data == "back:main")
async def back_main(cb: types.CallbackQuery):
    await safe_edit(cb.message, WELCOME_TEXT, kb_main_menu())
    await cb.answer()

# ============ –í–ï–¢–ö–ê –ü–û–ö–£–ü–ö–ò ============
@dp.callback_query(F.data.startswith("city:"))
async def on_city(cb: types.CallbackQuery):
    city = cb.data.split(":", 1)[1]
    user_state[cb.from_user.id] = {"city": city}
    await safe_edit(cb.message, f"–¢–æ–≤–∞—Ä—ã –≤ –≥–æ—Ä–æ–¥–µ <b>{city}</b>:", kb_products(city))
    await cb.answer()

@dp.callback_query(F.data == "back:cities")
async def back_cities(cb: types.CallbackQuery):
    await safe_edit(cb.message, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", kb_cities())
    await cb.answer()

@dp.callback_query(F.data == "back:products")
async def back_products(cb: types.CallbackQuery):
    st = user_state.get(cb.from_user.id, {})
    city = st.get("city")
    if not city:
        await safe_edit(cb.message, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", kb_cities())
    else:
        await safe_edit(cb.message, f"–¢–æ–≤–∞—Ä—ã –≤ –≥–æ—Ä–æ–¥–µ <b>{city}</b>:", kb_products(city))
    await cb.answer()

@dp.callback_query(F.data.startswith("prod:"))
async def on_product(cb: types.CallbackQuery):
    idx = int(cb.data.split(":")[1])
    st = user_state.get(cb.from_user.id, {})
    city = st.get("city")
    if not city:
        await safe_edit(cb.message, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", kb_cities())
        await cb.answer()
        return

    product = PRODUCTS[city][idx]
    st["product"] = product
    user_state[cb.from_user.id] = st

    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ñ–æ—Ç–æ; –µ—Å–ª–∏ –Ω–µ–ª—å–∑—è ‚Äî —É–¥–∞–ª—è–µ–º –∏ —à–ª—ë–º —Ñ–æ—Ç–æ
    await show_product_with_districts(cb.message, city, product)
    await cb.answer()

@dp.callback_query(F.data.startswith("dist:"))
async def on_district(cb: types.CallbackQuery):
    district = cb.data.split(":", 1)[1]
    st = user_state.setdefault(cb.from_user.id, {})
    st["district"] = district
    user_state[cb.from_user.id] = st

    # –ù–∞ —ç–∫—Ä–∞–Ω–µ —Ä–∞–π–æ–Ω–∞ —É –Ω–∞—Å —Ñ–æ—Ç–æ; —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ edit_text –¥–ª—è media,
    # –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ), –ø–æ–∫–∞–∑—ã–≤–∞—è –æ–ø–ª–∞—Ç—É.
    await safe_edit_reply_markup(cb.message, kb_payments())
    await cb.answer()

@dp.callback_query(F.data == "back:districts")
async def back_districts(cb: types.CallbackQuery):
    st = user_state.get(cb.from_user.id, {})
    city = st.get("city")
    product = st.get("product")
    if not city or not product:
        await safe_edit(cb.message, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", kb_cities())
        await cb.answer()
        return

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–∞–π–æ–Ω–æ–≤ –ø–æ–¥ —Ç–µ–º –∂–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞
    await safe_edit_reply_markup(cb.message, kb_districts(city, product["name"]))
    await cb.answer()

@dp.callback_query(F.data.startswith("pay:"))
async def on_payment(cb: types.CallbackQuery):
    pay_label = cb.data.split(":", 1)[1]
    st = user_state.setdefault(cb.from_user.id, {})
    st["payment"] = pay_label

    city = st.get("city", "‚Äî")
    pr = st.get("product", {})
    district = st.get("district", "‚Äî")
    price = pr.get("price", "‚Äî")
    name = pr.get("name", "‚Äî")
    details = PAYMENT_DETAILS.get(pay_label, "‚Äî")

    result = (
        "‚úÖ <b>–í–∞—à –∑–∞–∫–∞–∑</b>\n"
        f"–ì–æ—Ä–æ–¥: <b>{city}</b>\n"
        f"–¢–æ–≤–∞—Ä: <b>{name}</b>\n"
        f"–¶–µ–Ω–∞: <b>{price}‚ÇΩ</b>\n"
        f"–†–∞–π–æ–Ω: <b>{district}</b>\n"
        f"–û–ø–ª–∞—Ç–∞: <b>{pay_label}</b>\n\n"
        f"üí≥ <b>–†–µ–∫–≤–∏–∑–∏—Ç—ã</b>: <code>{details}</code>\n"
        f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–ø–∏—à–∏—Ç–µ <a href='https://t.me/h2h_operator'>–æ–ø–µ—Ä–∞—Ç–æ—Ä—É</a>."
    )

    # –ò—Ç–æ–≥ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ —Ç–µ–∫—Å—Ç: –∑–∞–º–µ–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ü–µ–ª–∏–∫–æ–º (–µ—Å–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ ‚Äî —Å–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏–º)
    await replace_with_text(cb.message, result, kb_order_final())

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ —Ñ–∞–π–ª
    try:
        with open(ORDERS_FILE, "a", encoding="utf-8") as f:
            f.write(
                f"{datetime.now().isoformat()} | user:{cb.from_user.id} (@{cb.from_user.username}) | "
                f"city:{city} | product:{name} | price:{price} | district:{district} | pay:{pay_label}\n"
            )
    except Exception:
        pass

    await cb.answer()

@dp.callback_query(F.data == "order:cancel")
async def order_cancel(cb: types.CallbackQuery):
    user_state.pop(cb.from_user.id, None)
    await replace_with_text(cb.message, WELCOME_TEXT, kb_main_menu())
    await cb.answer()

# ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ï–ù–î–ï–†–ê =====

async def safe_edit(message: types.Message, text: str, reply_markup: types.InlineKeyboardMarkup | None = None):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ –º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω:
    - –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ ‚Äî edit_text
    - –µ—Å–ª–∏ —Ñ–æ—Ç–æ ‚Äî edit_caption
    - –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å ‚Äî —É–¥–∞–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ
    """
    try:
        if message.photo:
            await message.edit_caption(caption=text, reply_markup=reply_markup)
        else:
            await message.edit_text(text, reply_markup=reply_markup)
    except Exception:
        try:
            await message.delete()
        except Exception:
            pass
        await message.answer(text, reply_markup=reply_markup)

async def safe_edit_reply_markup(message: types.Message, reply_markup: types.InlineKeyboardMarkup | None = None):
    """
    –ú–µ–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ.
    –ü–æ–¥—Ö–æ–¥–∏—Ç, –∫–æ–≥–¥–∞ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî —Ñ–æ—Ç–æ, –∏ –Ω—É–∂–Ω–æ –Ω–µ –ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫—É edit_text.
    """
    try:
        await message.edit_reply_markup(reply_markup=reply_markup)
    except Exception:
        # –§–æ–ª–±—ç–∫ ‚Äî –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º —Ç–µ–∫—Å—Ç
        text = "..."
        if message.photo:
            # –ï—Å–ª–∏ –±—ã–ª–æ —Ñ–æ—Ç–æ, –ø–æ–ø—Ä–æ–±—É–µ–º —Ö–æ—Ç—è –±—ã –∑–∞–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å—å
            cap = message.caption or " "
            await safe_edit(message, cap, reply_markup)
        else:
            txt = message.text or " "
            await safe_edit(message, txt, reply_markup)

async def show_product_with_districts(message: types.Message, city: str, product: dict):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ä–∞–π–æ–Ω–æ–≤.
    –ü—Ä–æ–±—É–µ–º edit_media, –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ media. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî —É–¥–∞–ª—è–µ–º –∏ —à–ª—ë–º –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ.
    """
    path = os.path.join(PHOTOS_DIR, product["photo"])
    caption = f"<b>{product['name']}</b>\n–¶–µ–Ω–∞: <b>{product['price']}‚ÇΩ</b>\n{product['desc']}"
    try:
        media = types.InputMediaPhoto(
            media=FSInputFile(path),
            caption=caption,
            parse_mode="HTML"
        )
        await message.edit_media(media=media, reply_markup=kb_districts(city, product["name"]))
    except Exception:
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —Ç–µ–∫—Å—Ç–æ–º ‚Äî Telegram –Ω–µ –¥–∞—Å—Ç edit_media: —É–¥–∞–ª—è–µ–º –∏ —à–ª—ë–º —Ñ–æ—Ç–æ
        try:
            await message.delete()
        except Exception:
            pass
        await message.answer_photo(
            FSInputFile(path),
            caption=caption,
            reply_markup=kb_districts(city, product["name"])
        )

async def replace_with_text(message: types.Message, text: str, reply_markup: types.InlineKeyboardMarkup | None = None):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —ç–∫—Ä–∞–Ω –Ω–∞ —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç (–¥–ª—è –∏—Ç–æ–≥–∞ –∑–∞–∫–∞–∑–∞ –∏ —Ç.–ø.).
    –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ ‚Äî —Ñ–æ—Ç–æ, —Å–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏–º –µ–≥–æ, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–µ–∫—Å—Ç.
    """
    try:
        if message.photo:
            raise RuntimeError("media_to_text")
        await message.edit_text(text, reply_markup=reply_markup)
    except Exception:
        try:
            await message.delete()
        except Exception:
            pass
        await message.answer(text, reply_markup=reply_markup)

# ============== –ó–ê–ü–£–°–ö ==============
async def main():
    bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
